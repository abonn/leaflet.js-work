<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.0-rc.3/dist/leaflet.css" />
	<!--*ROUTING for navigation module* <link rel="stylesheet" href="leaflet-routing-machine.css" />
	<link rel="stylesheet" href="routing_machineindex.css" />-->
	<style>
		body {
			padding: 0;
			margin: 0;
		}
		html, body, #map {
			height: 100%;
		}
		.leaflet-control-layers-toggle:after{
  	  	content:"Individual Places";
    		color:#000 ;
		}
		.leaflet-control-layers-toggle{
    	width:auto;
    	background-position:3px 50% ;
    	padding:5px;
    	padding-left:36px;
    	text-decoration:none;
    	line-height:36px;
		}

	</style>
</head>
<body>
	<div id="map"></div>
	<div class ="overlay">
	<script src="https://unpkg.com/leaflet@1.0.0-rc.3/dist/leaflet.js"></script>
	<script src="http://mapfile.xyz/webapps/easybutton.js"></script>
	<script src="https://use.fontawesome.com/2f9b13bb3f.js"></script>
	<!--//insert later <script src="leaflet-routing-machine.js"></script>
  <script src="Control.Geocoder.js"></script>-->
	<script>
    	var map = L.map('map').setView([47.999, 7.851], 15);


/*default:
    	https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZXNvYSIsImEiOiJjaXNvenh0cGwwMDJnMnRsZnBvaDQ0cnAyIn0.kfTdwTYiqZJwGNrkmv1gGg
custom:
		https://api.mapbox.com/styles/v1/esoa/cisp07hbb00ju2xpezeqg57o2/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZXNvYSIsImEiOiJjaXNvenh0cGwwMDJnMnRsZnBvaDQ0cnAyIn0.kfTdwTYiqZJwGNrkmv1gGg
*/
    	openstreetmap = L.tileLayer('https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZXNvYSIsImEiOiJjaXNvenh0cGwwMDJnMnRsZnBvaDQ0cnAyIn0.kfTdwTYiqZJwGNrkmv1gGg', {
        	attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> webapp: <a href="http://www.andrewbonneau.com">a.bonneau</a>'
    	});

			map.locate({setView: true, maxZoom: 20});
    	function onLocationFound(e) {
    	var radius = e.accuracy / 2;
    		L.marker(e.latlng).addTo(map)
        	.bindPopup("You are within " + radius + " meters from this point").openPopup();
    		L.circle(e.latlng, radius).addTo(map);
			}
			map.on('locationfound', onLocationFound);
				function onLocationError(e) {
    			alert(e.message);
			}
			openstreetmap.addTo(map);

//insert class icon information
		var classIcon = L.icon({
  		 	iconUrl: 'http://mapfile.xyz/webapps/pencil.png',
    		iconSize:     [38, 95], // size of the icon
    		iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
    		popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
    	});

//insert mensa icon information
		var mensaIcon = L.icon({
			iconUrl: 'http://mapfile.xyz/webapps/pizza-slice-icon-6.png',
			iconSize: 	  [38, 100],
			iconAnchor:   [5, 100],
			popupAnchor:  [-5, -100]
		});

map.on('locationerror', onLocationError);

//classes and mensas below:
		var hermannherder6 = L.marker([48.002588, 7.852268], {icon: classIcon}).bindPopup("<b>type: class</b><br><i>Hermann Herder str. 6.</i>");
		var hermannherder6_coord = 	L.latLng(48.002588, 7.852268);
		var herderbau = L.marker([48.003622, 7.853576], {icon: classIcon}).bindPopup("<b>type: class</b><br>Tennenbacher str/Herderbau<br><i>Tennenbacher Str. 4</i>");
		var herderbau_coord = L.latLng(48.003622, 7.853576);
		var rektorat = L.marker([47.999054, 7.848228], {icon: classIcon}).bindPopup("<b>type: class</b><br>Universitätrektorat<br><i>Friedrichstraße 39</i>");
		var mensainstituts = L.marker([48.002525, 7.848562], {icon: mensaIcon}).bindPopup("<b>type: mensa</b><br>Mensa Institutsviertel");
		var hermannherder7 = L.marker([48.002812, 7.849815], {icon: classIcon}).bindPopup("<b>type: class</b><br><i>Hermann-Herder-Straße 7</i>");
		var khmensa = L.marker([48.004437, 7.856608], {icon: mensaIcon}).bindPopup("<b>type: mensa</b><br>KH Mensa");
		var alte = L.marker([47.995360, 7.848559], {icon: classIcon}).bindPopup("<b>type: class</b><br>Alte Universität");
		var mensarempart = L.marker([47.992860, 7.846449], {icon: mensaIcon}).bindPopup("<b>type: mensa</b><br>Mensa Rempartstrasse");
		var classes = L.layerGroup([hermannherder6, herderbau, rektorat, hermannherder7, alte]);
		var mensas = L.layerGroup([mensainstituts, khmensa, mensarempart]);

//matriculation buildings below:
		var burgerammt = L.marker([47.9884, 7.84778]).bindPopup("<b>Bürgeramt:</b><br><i>Baslerstraße 2</i>");
		var fahnenbergplatz = L.marker([47.999054, 7.848228]).bindPopup("<b>Fahnenbergplatz:</b><br><i>Fahnenbergplatz, floor 1</i>");
		var sedanstrasse6 = L.marker([47.9947, 7.8439]).bindPopup("<b>Sedanstrasse6 (student service center):</b><br><i>Sedanstrasse 6</i>");
		var studentenwerk = L.marker([47.991, 7.847]).bindPopup("<b>Studentenwerk (SwFR):</b></br><i>Schreiberstraße 12-16</i>");


//overlay maps for group control
		var overlayMaps_openstreetmap_individual_buildings = {
			"Individual Buildings": openstreetmap
		};

		var overlayMaps_openstreetmap_matriculation = {
			"Matriculation Specific": openstreetmap
		};

//place openstreetmap.addTo(map) here if error

		var overlayMaps_individualclasses = {
			"Alte Universität": alte,
			"Herderbau": herderbau,
			"Hermannherder 6": hermannherder6,
			"Hermannherder 7": hermannherder7,
			"Universitätrektorat": rektorat,
			"Mensa Institutsviertel": mensainstituts,
			"KH Mensa": khmensa,
			"Mensa Rempartstrasse": mensarempart
		};

		var overlayMaps_matriculation = {
			"Bürgeramt": burgerammt,
			"Studentenwerk": studentenwerk,
			"The Financial Transactions Office": fahnenbergplatz,
			"Student Service Center": sedanstrasse6
		};

		L.control.layers(overlayMaps_openstreetmap_individual_buildings, overlayMaps_individualclasses).addTo(map);
		L.control.layers(overlayMaps_openstreetmap_matriculation, overlayMaps_matriculation).addTo(map);

		L.easyButton('fa fa-map fa-2x', function(){
			map.setView([47.999, 7.851], 15);
		}).addTo(map);

	function toggleLayer(layer){
				if (map.hasLayer(layer)) {
					map.removeLayer(layer);
				} else {
					map.addLayer(layer);
				}
			};

			L.easyButton('fa fa-pencil fa-2x', function(){
				toggleLayer(classes);
			}).addTo(map);

			L.easyButton('fa fa-pie-chart fa-2x', function(){
				toggleLayer(mensas);
			}).addTo(map);

			L.easyButton('fa fa-location-arrow fa-2x', function(){
				map.locate({setView: true, maxZoom: 16});
				function onLocationFound(e) {
				var radius = e.accuracy / 2;
				L.marker(e.latlng).addTo(map)
					.bindPopup("You are within " + radius + " meters from this point").openPopup();

				L.circle(e.latlng, radius).addTo(map);
	}
	map.on('locationfound', onLocationFound);
	function onLocationError(e) {
			alert(e.message);
	}
}).addTo(map);

/* reactive button working:
var class_button = L.easyButton('fa-pencil', function(){
			if (map.hasLayer(classes)) {
				map.removeLayer(classes);
			} else {
				map.addLayer(classes);
			}
		});
//note: multi-use function written above
class_button.addTo(map);


*/ //reactive button working:

		var scale_option = {
			imperial:false,
		};
		L.control.scale(scale_option).addTo(map);

		//**navigation module
		/*
		var control = L.Routing.control(L.extend(window.lrmConfig, {
			waypoints: [
				L.latLng(47.999, 7.851),
				L.latLng(57.6792, 11.949)
			],
			geocoder: L.Control.Geocoder.nominatim(),
			routeWhileDragging: true,
			reverseWaypoints: true,
			showAlternatives: true,
			altLineOptions: {
				styles: [
					{color: 'black', opacity: 0.15, weight: 9},
					{color: 'white', opacity: 0.8, weight: 6},
					{color: 'blue', opacity: 0.5, weight: 2}
				]
			}
		})).addTo(map);

		var navigation = L.Routing.errorControl(control);

		navigation.addTo(map);
		*/
		//**navigation module

	</script>
</body>
</html>
